@page "/gestational-age"

@using System.Globalization

<PageTitle>Idade Gestacional Corrigida</PageTitle>

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudTextField T="DateTime?" @bind-Value="BirthDate" Label="Data de Nascimento" InputType="InputType.Date" Format="@DateTimeConstants.PtBRDate" />
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudTextField @ref="GestationalWeeksReference" @bind-Value="GestationalWeeks" @onclick="() => GestationalWeeksReference.SelectAsync()" Label="Idade Gestacional (Semanas)" InputType="InputType.Number" />
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudTextField @ref="GestationalDaysReference" @bind-Value="GestationalDays" @onclick="() => GestationalDaysReference.SelectAsync()" Label="Idade Gestacional (Dias)" InputType="InputType.Number" />
    </MudItem>
    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="CalculateCorrectedGestationalAge">
            Calcular Idade Gestacional Corrigida
        </MudButton>
    </MudItem>
    <MudItem xs="12">
        <MudText Typo="Typo.h6">
            Idade Gestacional Corrigida:<br/>
            <MudHighlighter Text="@CorrectedGestationalAge" HighlightedText="@CorrectedGestationalAge"/>
        </MudText>
    </MudItem>
</MudGrid>

@code {
    [Inject] IJSRuntime JSRuntime { get; set; } = null!;
    [Inject] IGestationalAgeService GestationalAgeService { get; set; } = null!;

    private DateTime? BirthDate { get; set; }
    private int GestationalWeeks { get; set; }
    private int GestationalDays { get; set; }
    private string CorrectedGestationalAge { get; set; } = string.Empty;
    private MudTextField<int> GestationalWeeksReference = null!;
    private MudTextField<int> GestationalDaysReference = null!;

    private void CalculateCorrectedGestationalAge()
    {
        CorrectedGestationalAge = "Data de nascimento inválida";
        if (BirthDate.HasValue)
        {
            var gestacionalAge = new GestacionalAgeParams()
            {
                GestationalWeeks = GestationalWeeks,
                GestationalDays = GestationalDays,
                BirthDate = BirthDate.Value!
            };

            var result = GestationalAgeService.GetCorrectAge(gestacionalAge);
            CorrectedGestationalAge = result.DisplayResult();
        }
    }
}
