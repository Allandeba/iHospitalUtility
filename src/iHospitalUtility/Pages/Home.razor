@page "/"

<PageTitle>Início</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <MudCard Style="border-radius: 16px; box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);">
                <MudCardContent>
                    <MudText Typo="Typo.h6" Align="Align.Center">Idade Gestacional Corrigida</MudText>
                </MudCardContent>
                <MudCardActions Style="justify-content: center;">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/gestational-age" Style="border-radius: 8px;">
                        Clique para acessar
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Inject] ISnackbar Snackbar { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await ShowInstallAppModalAsync();
    }

    private async Task ShowInstallAppModalAsync()
    {
        var hideModal = await LocalStorage.GetItemAsync<bool>(CacheConstants.HideInstallAppModal);
        var isInStandaloneMode = await JSRuntime.InvokeAsync<bool>("isInStandaloneMode");
        if (!hideModal && !isInStandaloneMode)
        {
            Snackbar.Add(
                (MarkupString)$@"Você pode instalar esse aplicativo<br/>
                <button 
                    id=""installAppButton""
                    style=""color: #011f4b;""
                    onpointerenter=""this.setAttribute('style', 'color: #D50000;')""
                    onpointerleave=""this.setAttribute('style', 'color: #011f4b;')""
                    onclick=""hideInstallAppModal('{CacheConstants.HideInstallAppModal}')""
                >
                    Não exibir novamente
                </button>",
                Severity.Info,
                config =>
                {
                    config.Action = "Saiba mais";
                    config.ActionColor = Color.Primary;
                    config.Onclick = snackbar =>
                    {
                        NavigationManager.NavigateTo("/appinstall", true);
                        return Task.CompletedTask;
                    };
                }
            );
        }
    }
}
